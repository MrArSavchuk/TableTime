/* =========================
   Theme tokens
   ========================= */
:root {
  --bg: #fafafa;
  --panel: #ffffff;
  --text: #1b1f23;
  --muted: #6b7280;
  --brand: #659DBD;
  --accent: #DAAD86;
  --stroke: #e5e7eb;
  --shadow: 0 12px 30px rgba(0, 0, 0, .12);

  /* Background (light): images MUST live in /public and be referenced with absolute paths */
  --bg-image: url('/back_day.jpg');
  --bg-overlay: rgba(255, 255, 255, .20); /* gentle light overlay */
}

:root[data-theme="dark"] {
  --bg: #0f1113;
  --panel: #171a1d;
  --text: #e9eef2;
  --muted: #9aa5b1;
  --stroke: #2a2f36;
  --shadow: 0 12px 30px rgba(0, 0, 0, .35);

  /* Background (dark) */
  --bg-image: url('/back_night.jpg');
  --bg-overlay: rgba(0, 0, 0, .40);  /* a bit stronger for contrast in dark mode */
}

/* =========================
   Resets
   ========================= */
* { box-sizing: border-box; }
html, body, #root { height: 100%; }

/* =========================
   Global body styles
   - Use background-* directly on body (more reliable than ::before on Netlify)
   - iOS may ignore background-attachment: fixed; that’s OK (progressive enhancement)
   ========================= */
body {
  margin: 0;
  color: var(--text);
  font-family: system-ui, -apple-system, Segoe UI, Roboto, "Liberation Sans", Arial;

  /* Layered background: overlay + image + fallback color */
  background-color: var(--bg);
  background-image:
    linear-gradient(0deg, var(--bg-overlay), var(--bg-overlay)),
    var(--bg-image);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
}

/* =========================
   App shell
   ========================= */
.shell {
  display: grid;
  grid-template-columns: 280px minmax(720px, 1fr);
  width: min(1200px, 100% - 48px);
  margin: 24px auto;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: var(--shadow);
  background: var(--panel);
}

@media (max-width: 1024px) {
  .shell { grid-template-columns: 1fr; }
}

.sidebar {
  background: linear-gradient(180deg, #111 0%, #171a1d 100%);
  color: #fff;
  padding: 24px;
}

.brand { margin: 8px 0 6px 0; }
.tag { margin: 0; opacity: .85; }

.mode {
  padding: 8px 12px;
  border-radius: 10px;
  border: 1px solid var(--stroke);
  background: var(--panel);
  color: var(--text);
  cursor: pointer;
}

/* =========================
   Main / Card
   ========================= */
.main {
  padding: 24px;
  background: var(--bg);
  min-width: 0;           /* prevent overflow from long content */
}
.main > .card { width: 100%; }

.card {
  background: var(--panel);
  border: 1.5px solid var(--stroke);
  border-radius: 14px;
  padding: 18px;
}
.card.success { border-color: #10b98155; }

/* =========================
   Forms
   ========================= */
.form { display: grid; gap: 14px; }

.grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 14px;
}
.grid .span2 { grid-column: span 2; }

@media (max-width: 720px) {
  .grid { grid-template-columns: 1fr; }
  .grid .span2 { grid-column: auto; }
}

.field label {
  display: block;
  margin-bottom: 6px;
  font-weight: 600;
}

input, select, textarea {
  width: 100%;
  padding: 10px 12px;
  border-radius: 10px;
  border: 1.5px solid var(--stroke);
  background: var(--panel);
  color: var(--text);
  outline: none;
}

input:focus, select:focus, textarea:focus {
  border-color: var(--brand);
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--brand) 25%, transparent);
}

/* Placeholders */
input::placeholder { color: color-mix(in srgb, var(--text) 50%, transparent); }
:root[data-theme="dark"] input::placeholder { color: color-mix(in srgb, var(--text) 35%, transparent); }

/* Inline error text */
.err { color: #ef4444; font-size: .9rem; }

/* =========================
   Buttons
   ========================= */
.actions { display: flex; gap: 10px; flex-wrap: wrap; }

.btn {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 14px;
  border-radius: 10px;
  border: 1px solid var(--brand);
  background: var(--brand);
  color: white;
  cursor: pointer;
  font-weight: 600;
}

.btn.ghost { background: transparent; color: var(--text); }
.btn:disabled { opacity: .8; cursor: not-allowed; }

.details { list-style: none; padding: 0; margin: 10px 0; }
.muted { color: var(--muted); margin: 0 0 8px 0; }

/* =========================
   Date/Time addon buttons (calendar & clock)
   ========================= */
.with-addon { position: relative; }

/* Add room for the addon button on the right (except the hidden date input) */
.with-addon input:not(.visually-hidden-input) { padding-right: 44px; }

/* Hide default picker icons — we provide our own buttons */
input[type="date"]::-webkit-calendar-picker-indicator,
input[type="time"]::-webkit-calendar-picker-indicator { opacity: 0; }

.addon-btn{
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  width: 34px; height: 34px;
  display: grid; place-items: center;
  border-radius: 8px;
  border: 1px solid var(--stroke);
  background: var(--panel);
  color: var(--muted);
  cursor: pointer;
  transition:
    transform .12s ease,
    filter .12s ease,
    border-color .12s ease,
    box-shadow .12s ease,
    color .12s ease;
}
.addon-btn:hover{
  transform: translateY(-50%) scale(1.03);
  filter: brightness(1.05);
  color: var(--text);
}
.with-addon:focus-within .addon-btn{
  border-color: var(--brand);
  color: var(--brand);
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--brand) 22%, transparent);
}
:root[data-theme="dark"] .addon-btn{
  background: color-mix(in srgb, var(--panel) 90%, black);
}

/* Addon icons are pre-tinted (no CSS filters to keep them crisp) */
.addon-btn .addon-icon{
  width: 18px;
  height: 18px;
  object-fit: contain;
  pointer-events: none;
}

/* Hidden native date input (used only to call showPicker) */
.visually-hidden-input{
  position:absolute;
  width:1px; height:1px;
  margin:-1px; border:0; padding:0;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  overflow:hidden;
  opacity:0;
  pointer-events:none;
}
.visually-hidden-input::-webkit-calendar-picker-indicator { display: none; }

/* =========================
   Restaurant typeahead (suggestions dropdown)
   ========================= */
.searchable { position: relative; }
.combo-input { width: 100%; }

.suggestions{
  position: absolute;
  left: 0; right: 0;
  top: calc(100% + 6px);
  background: var(--panel);
  border: 1.5px solid var(--stroke);
  border-radius: 10px;
  box-shadow: var(--shadow);
  max-height: 240px;
  overflow: auto;
  z-index: 50;
}
.suggestions ul{ list-style: none; padding: 6px; margin: 0; }
.suggestions li{
  padding: 8px 10px;
  border-radius: 8px;
  cursor: pointer;
}
.suggestions li:hover,
.suggestions li[aria-selected="true"]{
  background: color-mix(in srgb, var(--brand) 14%, transparent);
}
.suggestions .empty{
  padding: 10px;
  color: var(--muted);
  cursor: default;
}

/* =========================
   Time slots popover (always light for readability)
   ========================= */
:root {
  --popover-bg: #ffffff;
  --popover-text: #1b1f23;
  --popover-border: #e5e7eb;
  --popover-hover: #f3f4f6;
}
:root[data-theme="dark"] {
  /* keep popover white even in dark mode */
  --popover-bg: #ffffff;
  --popover-text: #1b1f23;
  --popover-border: #e5e7eb;
  --popover-hover: #f3f4f6;
}

.popover {
  position: absolute;
  right: 0;
  top: calc(100% + 6px);
  z-index: 60;
  background: var(--popover-bg);
  color: var(--popover-text);
  border: 1.5px solid var(--popover-border);
  border-radius: 10px;
  box-shadow: var(--shadow);
  padding: 8px;
  max-height: 220px;
  overflow: auto;
  width: 220px;
}
.popover .opt {
  width: 100%;
  padding: 8px 10px;
  border: 0;
  background: transparent;
  color: inherit;
  text-align: left;
  border-radius: 8px;
  cursor: pointer;
}
.popover .opt:hover { background: var(--popover-hover); }

/* =========================
   Modal (ManageBooking)
   ========================= */
.modal {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, .4);
  display: grid;
  place-items: center;
  z-index: 100;
}
.dialog {
  width: min(480px, 92vw);
  background: var(--panel);
  color: var(--text);
  border: 1.5px solid var(--stroke);
  border-radius: 12px;
  box-shadow: var(--shadow);
  padding: 16px;
}

/* Selected item state inside popover */
.popover .opt.selected { background: var(--popover-hover); }

/* Inline checkbox (remember my details) */
.field.checkbox label.inline {
  display: flex;
  align-items: center;
  gap: 8px;
  margin: 0;
  font-weight: 500;
}
.field.checkbox input[type="checkbox"] {
  inline-size: 16px;
  block-size: 16px;
  margin: 0;
  accent-color: var(--brand);
}

/* =========================
   Reduced motion
   ========================= */
@media (prefers-reduced-motion: reduce) {
  .addon-btn { transition: none; }
}
